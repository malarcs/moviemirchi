@using System.Configuration;
@using DataStoreLib.Storage;

@{
    ViewBag.Title = "_MovieMirchiLayout";
}

@{
    Layout = null;
}




<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Movie Mirchi</title>
    @Styles.Render("~/Content/bootstrap.min.css")
    @Styles.Render("~/Content/bootstrap.css")
    @Styles.Render("~/Content/style.css")

    @Scripts.Render("~/Content/bootstrap.min.js")
    @Scripts.Render("~/Scripts/jquery-1.8.3.min.js")
    @Scripts.Render("~/Scripts/jquery.cycle2.min.js")
    @Scripts.Render("~/Content/movie.core.js")
    @Scripts.Render("~/Content/movie.autocomplete.js")


    <script type="text/javascript">


        $(document).ready(function () {

            //We have used keyup event to track the user enter value in the textbox.
            $("#target").keyup(function () {
                //Fetching the textbox value.
                var query = $(this).val();
                //Calling GetItems method.
                getItems(query);
            });

            function getItems(query) {

                //Here we are using ajax get method to fetch data from the list based on the user entered value in the textbox.
                //We are sending query i.e textbox as data.
                $.ajax({
                    url: '@Url.Action("AutoCompleteMovies", "AutoComplete")',
                    data: { "query": query },
                    type: 'POST',
                    dataType: 'json',
                    success: PopulateSearchResult,
                    error: function (xhr, status, error) {
                    }
                });
            }
        });

        function PopulateSearchResult(response) {
            if (response != null) {
                if ($("#targetUL") != undefined) {
                    //If the UL element is not null or undefined we are clearing it, so that the result is appended in new UL every next time.
                    $("#targetUL").remove();
                }
                //assigning json response data to local variable. It is basically list of values.
                data = response;

                if (data.length < 1 || data.length == undefined) {
                    $("#targetDiv").append($("<ul id='targetUL' style='display:none;'></ul>"));
                }
                else {
                    //appending an UL element to show the values.
                    $("#targetDiv").append($("<ul id='targetUL' style='display:block;'></ul>"));
                    //Removing previously added li elements to the list.
                    $("#targetUL").find("li").remove();
                    //We are iterating over the list returned by the json and for each element we are creating a li element and appending the li element to ul element.
                    $.each(data, function (i, value) {
                        //On click of li element we are calling a method.
                        var li = $("<li>");
                        var divImage = $("<div>");
                        $(divImage).attr("style", "width: 15%;float: left;");
                        var img = $("<img/>")
                        img.attr("class", "img-thumbnail");
                        img.attr("style", "width: 50px; height: 50px;margin-right: 1%");
                        img.attr("data-src", "holder.js/200x200");
                        img.attr("src", value.TitleImageURL);
                        divImage.append(img);

                        var divTitleDesc = $("<div>");
                        $(divTitleDesc).attr("style", "width: 80%;float: left;");

                        $(divTitleDesc).html("<span style='width:100%; font-weight: bold;float: left;font-size: 16px;'>" + value.Title + "</span><span style='width:100%;float: left;color: #666666;font-size: 11px;margin-top: 2px;'>" + value.Description + "</span>");

                        var anchor = $("<a>");
                        $(anchor).attr("href", value.Link);

                        $(anchor).append(divImage);
                        $(anchor).append(divTitleDesc);

                        $(li).append(anchor);

                        $("#targetUL").append(li);

                        //$("#targetUL").append($("<li class='targetLI' onclick='javascript:appendTextToTextBox(this)'>" + value.Title + "</li>"));

                    });
                }
            }
            else {
                //If data is null the we are removing the li and ul elements.
                $("#targetUL").find("li").remove();
                $("#targetUL").remove();
            }
        }
        //This method appends the text oc clicked li element to textbox.
        function appendTextToTextBox(e) {
            //Getting the text of selected li element.
            var textToappend = e.innerText;
            //setting the value attribute of textbox with selected li element.
            $("#target").val(textToappend);
            //Removing the ul element once selected element is set to textbox.
            $("#targetUL").remove();
            $("#targetUL").css("display", "none");
        }


        //Added code for load actorname
        $(document).ready(function () {

            // BindValueChangeEvent('#hfReviewerId', GetReviewerDetail);
            //get movies
            $("#txtActorName").keyup(function (e) {
                //Fetching the textbox value.
                if (e.keyCode == 40 || e.keyCode == 38) {
                }
                else {
                    var query = $(this).val();
                    //Calling GetItems method.
                    autoCompleteTextBox1(query, "AutoComplete/AutoCompleteActors", "autoCompleteActor", "actorUL", "txtActorName", "hfMovieId");
                }
            });

        });

        //end


        //Added code to load Director
        $(document).ready(function () {

            // BindValueChangeEvent('#hfReviewerId', GetReviewerDetail);
            //get movies
            $("#txtDirectorName").keyup(function (e) {
                //Fetching the textbox value.
                if (e.keyCode == 40 || e.keyCode == 38) {
                }
                else {
                    var query = $(this).val();
                    //Calling GetItems method.
                    autoCompleteTextBox1(query, "AutoComplete/AutoCompleteDirectors", "autoCompleteDirector", "directorUL", "txtDirectorName", "hfMovieId");
                }
            });

        });

        //end

        //Added code to load music Director
        $(document).ready(function () {

            // BindValueChangeEvent('#hfReviewerId', GetReviewerDetail);
            //get movies
            $("#txtMusicDirectorName").keyup(function (e) {
                //Fetching the textbox value.
                if (e.keyCode == 40 || e.keyCode == 38) {
                }
                else {
                    var query = $(this).val();
                    //Calling GetItems method.
                    autoCompleteTextBox1(query, "AutoComplete/AutoCompleteMusicDirectors", "autoCompleteMusicDirector", "musicDirectorUL", "txtMusicDirectorName", "hfMovieId");
                }
            });

        });
        //ended music director loading
    </script>

</head>
<body>

    <div id="page">
        <div class="page-container">
            <div class="header">
                <div class="top-navigation">
                    <div class="logo">
                        Movie Mirchi
                    </div>
                    <div class="search-bar">
                        <div class="component">
                            <div class="dropdown">
                                <a data-toggle="dropdown" href="#">All <b class="caret"></b></a>
                                <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
                                    <li><a href="#">All</a></li>
                                    <li><a href="#">Titles</a></li>
                                    <li><a href="#">Characters</a></li>
                                    <li><a href="#">Names</a></li>
                                </ul>
                            </div>
                        </div>
                        <div class="component">
                            <input type="text" class="form-control" placeholder="Search..." id="Text1" name="query"
                                   value="" />
                        </div>
                    </div>
                    <div class="top-navlinks">
                        <ul>
<<<<<<< HEAD
                            @if (Session["username"] != null)
                            {
                                <li class="authenticate">
                                    Welcome, @Session["username"].ToString().ToUpper()
                                </li>
                                <li class="fav" onclick="javascript:void(0);"><a>Favorites</a></li>
                                <li>
                                    @Html.ActionLink("LogOut", "Logout", "Login", null, new { @id = "auth_logoutlink" })

                                </li>

                            }
                            else
                            {
                                <li onclick="javascript:$('#sign-up').fadeIn(500);ShowHideFav('none');void(0);">
                                    <a>
                                        Sign up
                                    </a>
                                </li>
                                <li onclick="javascript:$('#login').fadeIn(500);ShowHideFav('none');void(0);"><a>Login</a></li>
                            }


=======
                            <li onclick="javascript:$('#sign-up').fadeIn(500);ShowHideFav('none');void(0);">
                                <a>Sign up</a>
                            </li>
                            <li onclick="javascript:$('#login').fadeIn(500);ShowHideFav('none');void(0);"><a>Login</a></li>
                            <li class="fav" onclick="javascript:void(0);"><a>Favorites</a></li>
>>>>>>> bf01b52afb737043fdf723dc74759d5988e24e15
                        </ul>
                    </div>
                </div>
            </div>
<<<<<<< HEAD


=======
>>>>>>> bf01b52afb737043fdf723dc74759d5988e24e15

            <div class="user-fav">
                <div class="fav-actors">
                    <div class="fav-title">
                        Actors
                    </div>
                    <div class="fav-content" id="fav_actor">                       
                    </div>
                </div>
                <div class="fav-actors">
                    <div class="fav-title">
                        Directors
                    </div>
                    <div class="fav-content" id="fav_director">                        
                    </div>
                </div>
                <div class="fav-actors">
                    <div class="fav-title">
                        Music Directors
                    </div>
                    <div class="fav-content" id="fav_musicdirector">                        
                    </div>
                </div>
                <div class="fav-actors">
                    <div class="fav-title">
                        Genre
                    </div>
                    <div class="fav-content">
                        <span>
                            <input type="checkbox" />Action
                        </span> <span>
                            <input type="checkbox" />Comedy
                        </span> <span>
                            <input type="checkbox" />Drama
                        </span> <span>
                            <input type="checkbox" />Romance
                        </span>
                    </div>
                </div>
                <div class="buttons" style="right: 48%;">
                    <div class="btn btn-success">
                        Save
                    </div>
                    <div class="btn" onclick='$(".user-fav").slideToggle("slow");'>
                        @*onclick="ShowHideFav('none');"*@
                        Close
                    </div>
                </div>
            </div>
        </div>
    </div>

    @RenderBody()

    <div id="footer">
        &copy; 2014. Movie Mirchi
    </div>

    <div id="modal" style="display: none">
        <div class="background">
        </div>
        <div id="login" style="display: none" class="modal-content">
            <div class="modal-header-content">
                Log in
            </div>
            <div class="modal-content-container">

                @if (Session["username"] == null)
                {

                <!--Fb Login Srcipt-->
                    <div id="fb-root"></div>
                        <!--Fb Login Srcipt-->
                    <script>
                        window.userFields = {
                            UserId: "@(Session["userid"] != null ? Session["userid"] : "")",
                            UserType: "@(Session["type"] != null ? Session["type"] : "")",
                            FirstName: "@(Session["firstname"] != null ? Session["firstname"] : "")",
                            LastName: "@(Session["lastname"] != null ? Session["lastname"] : "")",
                            Email: "@(Session["email"] != null ? Session["email"] : "")",
                            Mobile: "@(Session["mobile"] != null ? Session["mobile"] : "")",
                            DateOfBirth: "@(Session["dob"] != null ? Session["dob"] : "")",
                            Gender: "@(Session["gender"] != null ? Session["gender"] : "")",
                            City: "@(Session["city"] != null ? Session["city"] : "")",
                            Profile_Pic_Http: "@(Session["profile_pic"] != null ? Session["profile_pic"] : "")",
                            Profile_Pic_Https: "@(Session["profile_pic_https"] != null ? Session["profile_pic_https"] : "")",
                            Country: "@(Session["country"] != null ? Session["country"] : "")",
                            accessToken: "@(Session["fb_access_token"] != null ? Session["fb_access_token"] : "")"
                        };


                        window.fbAsyncInit = function () {
                            FB.init({
                                appId: '@ConfigurationManager.AppSettings["FacebookAppId"]',
                                status: true, // check login status
                                cookie: true, // enable cookies to allow the server to access the session
                                xfbml: true  // parse XFBML
                            });

                            // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
                            // for any authentication related change, such as login, logout or session refresh. This means that
                            // whenever someone who was previously logged out tries to log in again, the correct case below
                            // will be handled.
                            FB.Event.subscribe('auth.authResponseChange', function (response) {
                                // Here we specify what we do with the response anytime this event occurs.
                                if (response.status === 'connected') {
                                    // The response object is returned with a status field that lets the app know the current
                                    // login status of the person. In this case, we're handling the situation where they
                                    // have logged in to the app.
                                    //testAPI();
                                    var uid = response.authResponse.userID;
                                    var accessToken = response.authResponse.accessToken;
                                    //fbLogin();
                                    testAPI(response);
                                } else if (response.status === 'not_authorized') {
                                    // In this case, the person is logged into Facebook, but not into the app, so we call
                                    // FB.login() to prompt them to do so.
                                    // In real-life usage, you wouldn't want to immediately prompt someone to login
                                    // like this, for two reasons:
                                    // (1) JavaScript created popup windows are blocked by most browsers unless they
                                    // result from direct interaction from people using the app (such as a mouse click)
                                    // (2) it is a bad experience to be continually prompted to login upon page load.
                                    //FB.login();
                                    //fbLogin();
                                    testAPI(response);
                                } else {
                                    // In this case, the person is not logged into Facebook, so we call the login()
                                    // function to prompt them to do so. Note that at this stage there is no indication
                                    // of whether they are logged into the app. If they aren't then they'll see the Login
                                    // dialog right after they log in to Facebook.
                                    // The same caveats as above apply to the FB.login() call here.
                                    //FB.login();
                                    //fbLogin();
                                    testAPI(response);
                                    //FB.logout(); made by me
                                    //fblogout(); made by me
                                }
                            });
                        };

                        // Load the SDK asynchronously
                        (function (d) {
                            var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
                            if (d.getElementById(id)) { return; }
                            js = d.createElement('script'); js.id = id; js.async = true;
                            js.src = "//connect.facebook.net/en_US/all.js";
                            ref.parentNode.insertBefore(js, ref);
                        }(document));

                        // Here we run a very simple test of the Graph API after login is successful.
                        // This testAPI() function is only called in those cases.
                        function testAPI(response) {
                            console.log('Welcome!  Fetching your information.... ');

                            accessToken = "";
                            accessToken = response.authResponse.accessToken;

                            FB.api('/me', function (response) {
                                console.log(response);
                                console.log('Good to see you, ' + response.name + '.');

                                userFields.UserId = response.id;
                                userFields.UserType = "facebook";
                                userFields.FirstName = response.first_name;
                                userFields.LastName = response.last_name;
                                userFields.Email = response.email;
                                userFields.Mobile = "";
                                userFields.DateOfBirth = response.birthday;
                                userFields.Gender = response.gender;
                                userFields.City = "";
                                userFields.Profile_Pic_Http = "http://graph.facebook.com/" + response.id + "/picture?type=large";
                                userFields.Profile_Pic_Https = "https://graph.facebook.com/" + response.id + "/picture?type=large";
                                userFields.Country = accessToken; // since we do not want to make major changes, posting access token in country field
                                connectUser();
                            });
                        }

                        var accessToken;
                        var fbLogin = function () {

                            FB.login(function (response) {

                                if (response.authResponse) {
                                    //$('#cboxClose').trigger('click');
                                    accessToken = "";
                                    accessToken = response.authResponse.accessToken;

                                    $(window).colorbox.close();
                                    //console.log('Welcome!  Fetching your information.... ');
                                    if (response.status === 'connected') {
                                        loginStatus = true;

                                        FB.api('/me', function (response) {
                                            console.log(response);
                                            console.log('Good to see you, ' + response.name + '.');

                                            alert(response.name);

                                            userFields.UserId = response.id;
                                            userFields.UserType = "facebook";
                                            userFields.FirstName = response.first_name;
                                            userFields.LastName = response.last_name;
                                            userFields.Email = response.email;
                                            userFields.Mobile = "";
                                            userFields.DateOfBirth = response.birthday;
                                            userFields.Gender = response.gender;
                                            userFields.City = "";
                                            userFields.Profile_Pic_Http = "http://graph.facebook.com/" + response.id + "/picture?type=large";
                                            userFields.Profile_Pic_Https = "https://graph.facebook.com/" + response.id + "/picture?type=large";
                                            userFields.Country = accessToken; // since we do not want to make major changes, posting access token in country field
                                            connectUser();
                                        });
                                    }
                                } else {
                                    //console.log('User cancelled login or did not fully authorize.');
                                }
                            }, { scope: 'email,user_about_me,user_birthday,user_website,publish_actions' });
                        }

                        window.connectUser = function () {
                            $.post("@Url.Action("ConnectUser", "Login")", userFields, function (response) {
                                if (response.success == true) {
                                    if (/iPhone/i.test(navigator.userAgent)) {
                                        location.reload(true);
                                    }
                                    location.reload(true);
                                }
                            }, 'json');
                        }

                    </script>

                    <!--
                    Below we include the Login Button social plugin. This button uses the JavaScript SDK to
                    present a graphical Login button that triggers the FB.login() function when clicked. -->

                }
                <span class="text-container">

                    <fb:login-button show-faces="false" size="large" max-rows="1" width="500">
                        Login with Facebook
                    </fb:login-button>
                </span>



                <div class="signup-or-separator">
                    <h6 class="text shift text-special">
                        or
                    </h6>
                </div>

                <div class="Record">
                    <div class="Column2">
                        <div class="signup-or-separator">
                            <div class="alert alert-danger" id="loginError" style="display: none"></div>
                        </div>
                    </div>
                </div>


                @using (Html.BeginForm())
                {
                    <div class="control-group row-space-1">
                        <input class="decorative-input" id="signin_email" name="email" placeholder="Email Address"
                               type="email">
                    </div>
                    <div class="control-group row-space-2">
                        <input class="decorative-input" id="signin_password" name="password" placeholder="Password"
                               type="password">
                    </div>


                    <div class="clearfix row-space-2">
                        <label for="remember_me2" class="checkbox remember-me">
                            <input type="checkbox" name="remember_me" id="remember_me2" value="true" class="remember_me">
                            Remember me
                        </label>
                        <a href="/forgot_password" class="forgot-password">Forgot password?</a>
                    </div>


                    <div class="Record">
                        <div class="Column2">


                            <div id="popup-auth" class="btn btn-block btn-success" onclick="authenticateUser();">Login</div>
                            @Html.Hidden("hfLogin", "")
                        </div>
                    </div>


                }

                <hr />
                <div class="sign-up-link">
                    Don't have an account?<a onclick="ShowWindow('#sign-up');">Sign up</a>
                </div>
            </div>

        </div>

        <div id="sign-up" style="display: none" class="modal-content">
            <div class="modal-header-content">
                Sign up
            </div>
            <div class="modal-content-container">
                <div class="fb-login">
                    <span class="text-container">Sign up with Facebook </span>
                </div>
                <div class="signup-or-separator">
                    <h6 class="text shift text-special">
                        or
                    </h6>
                </div>
                <div class="sign-up-link">
                    <a onclick="ShowWindow('#sign-up-email')" style="margin: 0px;">
                        Sign up with Email
                    </a>
                </div>
                <div class="terms">
                    By signing up, I agree to MovieMirchi's <a>Terms of Service</a> and <a>Privacy Policy</a>.
                </div>
                <hr class="separator" />
                <div class="sign-up-link">
                    Already a member?<a onclick="ShowWindow('#login');">Sign in</a>
                </div>
            </div>
        </div>

        <div id="sign-up-email" style="display: none" class="modal-content">
            <div class="modal-header-content">
                Sign up
            </div>
            <div class="modal-content-container">
                <div class="fb-login">
                    <span class="text-container">Sign up with Facebook </span>
                </div>
                <div class="signup-or-separator">
                    <h6 class="text shift text-special">
                        or
                    </h6>
                </div>

                <div class="signup-or-separator">
                    <div class="alert alert-danger" id="registerError" style="display: none"></div>
                    <div class="alert alert-success" id="successStatusR" style="display: none"></div>
                </div>



                @using (Html.BeginForm())
                {
                    <div class="control-group row-space-1">
                        <input class="decorative-input" id="FirstName" name="firstname" placeholder="First Name"
                               type="text">
                    </div>
                    <div class="control-group row-space-1">
                        <input class="decorative-input" id="LastName" name="lastname" placeholder="Last Name"
                               type="text">
                    </div>
                    <div class="control-group row-space-1">
                        <input class="decorative-input" id="Email1" name="email" placeholder="Email Address"
                               type="email">
                    </div>
                    <div class="control-group row-space-2">
                        <input class="decorative-input" id="password2" name="password" placeholder="Password"
                               type="password">
                    </div>
                    <div class="control-group row-space-2">
                        <input class="decorative-input" id="password3" name="password" placeholder="Retype Password"
                               type="password">
                    </div>
                    <div class="clearfix row-space-2">
                        <label for="remember_me2" class="checkbox remember-me">
                            <input type="checkbox" name="news" id="chkNews" value="true" class="remember_me">
                            Send me MovieMirchi Updates
                        </label>
                    </div>

                    <div class="Record">
                        <div class="Column2">

                            <div class="btn btn-block btn-success" id="popup-auth" onclick="RegisterUser();">Sign up</div>
                            @Html.Hidden("userJson", "")
                        </div>
                    </div>


                }


                <div class="terms">
                    By signing up, I agree to MovieMirchi's <a>Terms of Service</a> and <a>Privacy Policy</a>.
                </div>
                <hr class="separator" />
                <div class="sign-up-link">
                    Already a member?<a onclick="ShowWindow('#login');">Sign in</a>
                </div>
            </div>
        </div>

    </div>

<<<<<<< HEAD





=======
>>>>>>> bf01b52afb737043fdf723dc74759d5988e24e15
</body>


</html>


<script type="text/javascript">
    $(".top-navlinks li").click(function () {
        if ($(this).attr("class") != "fav") {
            $("#modal").show();
        }
    });

    $("#modal").click(function () {
        $(this).hide();
        $('#sign-up').hide();
        $('#login').hide();
    });

    $("#login").click(function (e) {
        e.stopPropagation();
    });

    $("#sign-up").click(function (e) {
        e.stopPropagation();
    });

    $("#sign-up-email").click(function (e) {
        e.stopPropagation();
    });

    function ShowWindow(id) {
        $('#sign-up').hide();
        $('#login').hide();
        $('#sign-up-email').hide();
        //$(".fav").click();
        $(id).show();
    }

    $(document).ready(function () {
        $('.banner').cycle({
            fx: 'fade' // choose your transition type, ex: fade, scrollUp, shuffle, etc...
        });

        $(".fav").click(function () {
            $(".user-fav").slideToggle("slow");
        });

<<<<<<< HEAD



=======
        PopulatingUserFavorite();
>>>>>>> bf01b52afb737043fdf723dc74759d5988e24e15
    });


    function ShowHideFav(display) {
        $(".user-fav").css("display", display);
    }



</script>
