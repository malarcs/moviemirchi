@using System.Configuration;
@using DataStoreLib.Storage;

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Movie Mirchi</title>
    <meta name="robots" content="NOODP" />
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    @Styles.Render("~/Content/movie.style.css")
    @*@Styles.Render("~/Content/bootstrap.css")*@
    @Styles.Render("~/Content/bootstrap.min.css")
    @*@Styles.Render("~/Content/bootstrap-theme.min.css")*@
    @Styles.Render("~/Content/bootstrap-responsive.css")
    @Styles.Render("~/Content/jquery.jscrollpane.custom.css")
    @Styles.Render("~/Content/bookblock.css")
    @Styles.Render("~/Content/custom.css")

    @*<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>*@
    @Scripts.Render("~/Content/jquery-1.9.1.js")
    @Scripts.Render("~/Content/modernizr.custom.js")

    <script type="text/javascript">
        $(document).ready(function () {
            $(".clear-search-bar").click(function () {
                $("#target").val("");
                $("#targetUL").hide();
                $("#home-search").val("");
                $(this).hide();
            });

            //We have used keyup event to track the user enter value in the textbox.
            $("#target").keyup(function () {
                $("#home-search").val("");
                //Fetching the textbox value.
                var query = $(this).val().replace(".", "");

                //clear-search-bar
                if (query.length > 0)
                    $("#search-results").show();
                else
                    $("#search-results").hide();

                getItems(query);
            });

            $("#home-search").keyup(function (e) {
                $("#target").val("");
                var query = $(this).val().replace(".", "");

                if (query.length > 0)
                    $("#search-bar .clear-search-bar").show();
                else
                    $("#search-bar .clear-search-bar").hide();

                getItems(query);
            });

            function getItems(query) {

                //Here we are using ajax get method to fetch data from the list based on the user entered value in the textbox.
                //We are sending query i.e textbox as data.
                $.ajax({
                    url: '@Url.Action("AutoCompleteMovies", "AutoComplete")',
                    data: { "query": query },
                    type: 'POST',
                    dataType: 'json',
                    success: PopulateSearchResult,
                    error: function (xhr, status, error) {
                    }
                });
            }
        });

        function PopulateSearchResult(response) {
            if (response != null) {
                if ($("#targetUL") != undefined) {
                    //If the UL element is not null or undefined we are clearing it, so that the result is appended in new UL every next time.
                    $("#targetUL").remove();
                }
                //assigning json response data to local variable. It is basically list of values.
                data = response;

                if (data.length < 1 || data.length == undefined) {
                    $("#targetDiv").append($("<ul id='targetUL' style='display:none;'></ul>"));
                }
                else {
                    //appending an UL element to show the values.
                    $("#search-results").append($("<ul id='targetUL' style='display:block;'></ul>"));
                    //Removing previously added li elements to the list.
                    $("#search-results").find("li").remove();
                    //We are iterating over the list returned by the json and for each element we are creating a li element and appending the li element to ul element.
                    var searchResultCounter = 0;

                    $.each(data, function (i, value) {
                        //On click of li element we are calling a method.
                        if (searchResultCounter < 6) {
                            searchResultCounter++;
                            var li = $("<li>");
                            var divImage = $("<div>");
                            $(divImage).attr("style", "min-width: 15%; min-height: 50px; float: left;");
                            var img = $("<img/>")
                            img.attr("class", "img-thumbnail");
                            img.attr("style", "width: 50px; height: 50px;margin-right: 1%");
                            //img.attr("data-src", "holder.js/200x200");
                            //img.attr("src", value.TitleImageURL);

                            var description = JSON.parse(value.Description);

                            var actors = "";

                            for (var i = 0; i < description.length; i++) {
                                actors += description[i] + ", ";
                            }

                            if (actors.length > 0) {
                                actors = actors.substring(0, actors.lastIndexOf(","));
                            }

                            img.attr("class", "movie-poster");
                            if (value.TitleImageURL != "") {
                                img.attr("src", "/Posters/Images/" + value.TitleImageURL);
                            }
                            else {
                                img.attr("src", "/Posters/Images/default-movie.jpg");
                            }

                            divImage.append(img);

                            var divTitleDesc = $("<div>");
                            $(divTitleDesc).attr("style", "width: 80%;float: left;");

                            $(divTitleDesc).html("<span style='width:100%; font-weight: bold;float: left;font-size: 16px;'>" + value.Title + "</span><span style='width:100%;float: left;color: #666666;font-size: 11px;margin-top: 2px;'>" + value.Type + "</span>");

                            var anchor = $("<a>");
                            $(anchor).attr("href", "/Movie/" + value.Link);

                            $(anchor).append(divImage);
                            $(anchor).append(divTitleDesc);

                            $(li).append(anchor);

                            $("#targetUL").append(li);

                            //$("#targetUL").append($("<li class='targetLI' onclick='javascript:appendTextToTextBox(this)'>" + value.Title + "</li>"));
                        }
                    });
                }
            }
            else {
                //If data is null the we are removing the li and ul elements.
                $("#targetUL").find("li").remove();
                $("#targetUL").remove();
            }

            if ($("#target").val() == "")
                $("#search-results").append($("#targetUL"));
        }

        //This method appends the text oc clicked li element to textbox.
        function appendTextToTextBox(e) {
            //Getting the text of selected li element.
            var textToappend = e.innerText;
            //setting the value attribute of textbox with selected li element.
            $("#target").val(textToappend);
            //Removing the ul element once selected element is set to textbox.
            $("#targetUL").remove();
            $("#targetUL").css("display", "none");
        }

        //Added code for load actorname
        $(document).ready(function () {

            // BindValueChangeEvent('#hfReviewerId', GetReviewerDetail);
            //get movies
            $("#txtActorName").keyup(function (e) {
                //Fetching the textbox value.
                if (e.keyCode == 40 || e.keyCode == 38) {
                }
                else {
                    var query = $(this).val();
                    //Calling GetItems method.
                    autoCompleteTextBox1(query, "AutoComplete/AutoCompleteActors", "autoCompleteActor", "actorUL", "txtActorName", "hfMovieId");
                }
            });
        });

        //end


        //Added code to load Director
        $(document).ready(function () {

            // BindValueChangeEvent('#hfReviewerId', GetReviewerDetail);
            //get movies
            $("#txtDirectorName").keyup(function (e) {
                //Fetching the textbox value.
                if (e.keyCode == 40 || e.keyCode == 38) {
                }
                else {
                    var query = $(this).val();
                    //Calling GetItems method.
                    autoCompleteTextBox1(query, "AutoComplete/AutoCompleteDirectors", "autoCompleteDirector", "directorUL", "txtDirectorName", "hfMovieId");
                }
            });

        });

        //end

        //Added code to load music Director
        $(document).ready(function () {

            // BindValueChangeEvent('#hfReviewerId', GetReviewerDetail);
            //get movies
            $("#txtMusicDirectorName").keyup(function (e) {
                //Fetching the textbox value.
                if (e.keyCode == 40 || e.keyCode == 38) {
                }
                else {
                    var query = $(this).val();
                    //Calling GetItems method.
                    autoCompleteTextBox1(query, "AutoComplete/AutoCompleteMusicDirectors", "autoCompleteMusicDirector", "musicDirectorUL", "txtMusicDirectorName", "hfMovieId");
                }
            });

        });
        //ended music director loading
    </script>
</head>
<body>
    <div class="movie-container">
        <div id="top-nav">
            <div class="logo">
                <a href="/Home" title="Movie Mirchi Home"><img src='/Images/logo.png' /></a>
                @*@Html.ActionLink("", "Index", "Home", null, new { @title = "Find your movie", @rel = "home" })*@
            </div>
            <div class="home-search-bar">
                <div class="search-container">
                    <div class="input-group search-input">
                        <div id="search-bar">
                            <input type="text" class="form-control search" placeholder="What do you like? Movies, Celebrities, Reviewers ..." id="home-search" name="query" value="" autocomplete="off" />
                            <span class="clear-search-bar" title="Clear search"><img src="/Images/clear-button.png" class="clear-search-bar-button"></span>
                            <div id="search-results"></div>
                        </div>
                        <div class="search-button">Search</div>
                    </div>
                </div>
            </div>
            @*<div class="col-sm-6 col-md-6">
                    <form class="navbar-form" role="search" method="get" id="search-form" name="search-form">
                        <div class="btn-group pull-left" id="btngroup">
                            <select id="searchtype" class="form-control">
                                <option>
                                    All
                                </option>
                                <option>
                                    Title
                                </option>
                                <option>
                                    Character
                                </option>
                                <option>
                                    Name
                                </option>
                            </select>
                        </div>
                        <div class="input-group">
                            <div id="targetDiv">
                                <input type="text" class="form-control" placeholder="Search Movies, Celebrities, Artists, Reviewers..." id="target" name="query" value="" autocomplete="off" />
                                <span class="clear-search-bar" title="Clear search"><img src="/Images/clear-button.png" class="clear-search-bar-button"></span>
                            </div>
                            <div class="input-group-btn">
                                <button type="submit" class="btn btn-success">Go</button>
                            </div>
                        </div>
                    </form>
                </div>*@
            <div class="status">
                <ul>
                    @if (Session["username"] != null)
                    {
                        <li class="authenticate">
                            Welcome, @Session["username"].ToString().ToUpper()
                        </li>
                        <li class="log">
                            @Html.ActionLink("Logout", "Logout", "Login")

                        </li>
                    }
                    else
                    {
                        <li><a data-toggle="modal" href="#SignUp" role="presentation" tabindex="-3">Sign Up</a></li>
                        <li><a data-toggle="modal" href="#Login" role="presentation" tabindex="-3">Sign In</a></li>

                    }
                </ul>
            </div>
        </div>

        @*<div class="row">
                <div class="navbar navbar-inverse" role="navigation">
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>

                    </div>
                    <div class="collapse navbar-collapse navbar-ex1-collapse">
                        <div class="col-sm-2 col-md-2" style="display:none">
                            <form class="navbar-form navbar-right" role="search">
                                <div class="input-group"><a href="#" class="btn btn-warning">Post Your Ads</a></div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>*@
        <div id="container" class="movie-panel">

            @RenderBody()

        </div>
        <div class="footer">&copy;&nbsp;2014 Movie Mirchi</div>

        @*        @if ((Session["username"] != null && Session["favorite"] == null) || (Session["username"] != null && Session["favorite"] != null && string.IsNullOrEmpty(Session["favorite"].ToString())))
            {
                <input type="hidden" value="@Session["userid"]" id="hfUserId" />
                <div>
                    <div id="ql_SideBar">
                        <div title="Click here for any help" id="ql_Display" style="background-color: #404040 !important; color: White; background-image: none;
                    border-top-left-radius: 3px; border-top-right-radius: 3px;">
                            <span>
                                Choose your favorite
                            </span>
                        </div>
                        <div id="ql_Tab" style="display:block">
                            <div id="ql_List">
                                <div id="favStatus" style="display:none" class="alert alert-danger"></div>
                                <div id="autoCompleteActor">
                                    <input type="text" name="txtActorName" id="txtActorName" placeholder="Actor Name" style="width:96%"><span style="color: Red">*</span>

                                </div>
                                <div id="autoCompleteDirector">
                                    <input type="text" name="txtDirectorName" id="txtDirectorName" placeholder="Director Name" style="width:96%"><span style="color: Red">*</span>

                                </div>
                                <div id="autoCompleteMusicDirector">
                                    <input type="text" name="txtMusicDirectorName" id="txtMusicDirectorName" placeholder="Music Director Name" style="width:96%"><span style="color: Red">*</span>

                                </div>
                                <select name="genre" id="genre" style="width:96%">
                                    <option value="select">--Genre--</option>
                                    <option value="Action">Action</option>
                                    <option value="Comedy">Comedy</option>
                                    <option value="Crime">Crime</option>
                                    <option value="Horror">Horror</option>

                                </select>
                                <div id="buttons" style="padding: 5px 0px;">
                                    <input type="button" id="btnSubmit" value="Save your favorites" class="btn btn-success" onclick="SaveUserFavorite();">
                                    <input type="button" id="btnClose" value="Close" class="btn btn-convert" onclick='$("#ql_SideBar").hide(500);' style="text-align: left">
                                </div>
                                <div id="queryStatus" style="color: Green"></div>
                                <div id="ql_EmptyText">
                                </div>
                            </div>
                            <div id="ql_Foot" style="text-align: justify; height: 0%; text-align: left;">
                            </div>
                        </div>
                    </div>
                </div>
            }
        *@
    </div>

    @*Added popup for Login*@
    <div class="modal fade" id="Login" tabindex="-2" role="dialog" aria-labelledby="myModalLabel2" aria-haspopup="false">
        <div class="modal-dialog" id="popup">
            <div class="modal-content">
                <div class="modal-header" id="popup-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h3 class="panel-title">
                        Log in
                    </h3>
                </div>

                <div class="modal-body">
                    @using (Html.BeginForm())
                    {
                        <div class="Record">
                            <div class="Column2">


                                <div class="alert alert-danger" id="loginError" style="display: none"></div>

                            </div>
                        </div>

                        <div id="fb-root"></div>
                        <!--Fb Login Srcipt-->
                        @*<script>
                                window.userFields = {
                                    UserId: "@(Session["userid"] != null ? Session["userid"] : "")",
                                    UserType: "@(Session["type"] != null ? Session["type"] : "")",
                                    FirstName: "@(Session["firstname"] != null ? Session["firstname"] : "")",
                                    LastName: "@(Session["lastname"] != null ? Session["lastname"] : "")",
                                    Email: "@(Session["email"] != null ? Session["email"] : "")",
                                    Mobile: "@(Session["mobile"] != null ? Session["mobile"] : "")",
                                    DateOfBirth: "@(Session["dob"] != null ? Session["dob"] : "")",
                                    Gender: "@(Session["gender"] != null ? Session["gender"] : "")",
                                    City: "@(Session["city"] != null ? Session["city"] : "")",
                                    Profile_Pic_Http: "@(Session["profile_pic"] != null ? Session["profile_pic"] : "")",
                                    Profile_Pic_Https: "@(Session["profile_pic_https"] != null ? Session["profile_pic_https"] : "")",
                                    Country: "@(Session["country"] != null ? Session["country"] : "")",
                                    accessToken: "@(Session["fb_access_token"] != null ? Session["fb_access_token"] : "")"
                                };


                                window.fbAsyncInit = function () {
                                    FB.init({
                                        appId: '@ConfigurationManager.AppSettings["FacebookAppId"]',
                                        status: true, // check login status
                                        cookie: true, // enable cookies to allow the server to access the session
                                        xfbml: true  // parse XFBML
                                    });

                                    // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
                                    // for any authentication related change, such as login, logout or session refresh. This means that
                                    // whenever someone who was previously logged out tries to log in again, the correct case below
                                    // will be handled.
                                    FB.Event.subscribe('auth.authResponseChange', function (response) {
                                        // Here we specify what we do with the response anytime this event occurs.
                                        if (response.status === 'connected') {
                                            // The response object is returned with a status field that lets the app know the current
                                            // login status of the person. In this case, we're handling the situation where they
                                            // have logged in to the app.
                                            //testAPI();
                                            var uid = response.authResponse.userID;
                                            var accessToken = response.authResponse.accessToken;
                                            //fbLogin();
                                            testAPI(response);
                                        } else if (response.status === 'not_authorized') {
                                            // In this case, the person is logged into Facebook, but not into the app, so we call
                                            // FB.login() to prompt them to do so.
                                            // In real-life usage, you wouldn't want to immediately prompt someone to login
                                            // like this, for two reasons:
                                            // (1) JavaScript created popup windows are blocked by most browsers unless they
                                            // result from direct interaction from people using the app (such as a mouse click)
                                            // (2) it is a bad experience to be continually prompted to login upon page load.
                                            //FB.login();
                                            //fbLogin();
                                            testAPI(response);
                                        } else {
                                            // In this case, the person is not logged into Facebook, so we call the login()
                                            // function to prompt them to do so. Note that at this stage there is no indication
                                            // of whether they are logged into the app. If they aren't then they'll see the Login
                                            // dialog right after they log in to Facebook.
                                            // The same caveats as above apply to the FB.login() call here.
                                            //FB.login();
                                            //fbLogin();
                                            testAPI(response);
                                        }
                                    });
                                };

                                // Load the SDK asynchronously
                                (function (d) {
                                    var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
                                    if (d.getElementById(id)) { return; }
                                    js = d.createElement('script'); js.id = id; js.async = true;
                                    js.src = "//connect.facebook.net/en_US/all.js";
                                    ref.parentNode.insertBefore(js, ref);
                                }(document));

                                // Here we run a very simple test of the Graph API after login is successful.
                                // This testAPI() function is only called in those cases.
                                function testAPI(response) {
                                    console.log('Welcome!  Fetching your information.... ');

                                    accessToken = "";
                                    accessToken = response.authResponse.accessToken;

                                    FB.api('/me', function (response) {
                                        console.log(response);
                                        console.log('Good to see you, ' + response.name + '.');

                                        userFields.UserId = response.id;
                                        userFields.UserType = "facebook";
                                        userFields.FirstName = response.first_name;
                                        userFields.LastName = response.last_name;
                                        userFields.Email = response.email;
                                        userFields.Mobile = "";
                                        userFields.DateOfBirth = response.birthday;
                                        userFields.Gender = response.gender;
                                        userFields.City = "";
                                        userFields.Profile_Pic_Http = "http://graph.facebook.com/" + response.id + "/picture?type=large";
                                        userFields.Profile_Pic_Https = "https://graph.facebook.com/" + response.id + "/picture?type=large";
                                        userFields.Country = accessToken; // since we do not want to make major changes, posting access token in country field
                                        connectUser();
                                    });
                                }

                                var accessToken;
                                var fbLogin = function () {

                                    FB.login(function (response) {

                                        if (response.authResponse) {
                                            //$('#cboxClose').trigger('click');
                                            accessToken = "";
                                            accessToken = response.authResponse.accessToken;

                                            $(window).colorbox.close();
                                            //console.log('Welcome!  Fetching your information.... ');
                                            if (response.status === 'connected') {
                                                loginStatus = true;

                                                FB.api('/me', function (response) {
                                                    console.log(response);
                                                    console.log('Good to see you, ' + response.name + '.');

                                                    alert(response.name);

                                                    userFields.UserId = response.id;
                                                    userFields.UserType = "facebook";
                                                    userFields.FirstName = response.first_name;
                                                    userFields.LastName = response.last_name;
                                                    userFields.Email = response.email;
                                                    userFields.Mobile = "";
                                                    userFields.DateOfBirth = response.birthday;
                                                    userFields.Gender = response.gender;
                                                    userFields.City = "";
                                                    userFields.Profile_Pic_Http = "http://graph.facebook.com/" + response.id + "/picture?type=large";
                                                    userFields.Profile_Pic_Https = "https://graph.facebook.com/" + response.id + "/picture?type=large";
                                                    userFields.Country = accessToken; // since we do not want to make major changes, posting access token in country field
                                                    connectUser();
                                                });
                                            }
                                        } else {
                                            //console.log('User cancelled login or did not fully authorize.');
                                        }
                                    }, { scope: 'email,user_about_me,user_birthday,user_website,publish_actions' });
                                }

                                window.connectUser = function () {
                                    $.post("@Url.Action("ConnectUser", "Login")", userFields, function (response) {
                                        if (response.success == true) {
                                            if (/iPhone/i.test(navigator.userAgent)) {
                                                location.reload(true);
                                            }
                                        }
                                    }, 'json');
                                }

                            </script>*@

                        <!--
                        Below we include the Login Button social plugin. This button uses the JavaScript SDK to
                        present a graphical Login button that triggers the FB.login() function when clicked. -->

                        @*<div class="Record">

                                <fb:login-button show-faces="false" size="large" max-rows="1" width="500">
                                    Login with Facebook
                                </fb:login-button>
                            </div>*@

                        <div class="Record">
                            <div class="Column2">
                                <div class="popup-or">
                                    <span>
                                        &nbsp;&nbsp;&nbsp;
                                        Or
                                        &nbsp;&nbsp;&nbsp;
                                    </span>
                                </div>
                            </div>
                        </div>

                        <div class="Record">
                            <div class="Column2">
                                <input type="text" id="username" placeholder="Email Address" class="popup-input" />
                            </div>
                        </div>

                        <div class="Record">
                            <div class="Column2">
                                <input type="password" id="loginPassword" placeholder="Password" class="popup-input" />

                                <label class="checkbox remember-me" for="remember_me2">
                                    <input id="remember_me2" class="remember_me" type="checkbox" value="true" name="remember_me" />
                                    Remember me
                                </label>
                                <a href="#" class="forgot_password">Forgot Password</a>
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">

                                <div id="popup-auth" class="btn btn-primary" onclick="authenticateUser();">Login</div>
                                @Html.Hidden("hfLogin", "")

                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer" id="popup-footer">
                    Dont Have an Account?<a data-toggle="modal" href="#SignUp" role="presentation" data-dismiss="modal"> Sign Up</a>

                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>

    @*End popup for login*@

    @*Popup for signUp*@

    <div class="modal fade" id="SignUp" tabindex="-2" role="dialog" aria-labelledby="myModalLabel2" aria-haspopup="false">
        <div class="modal-dialog" id="popup">
            <div class="modal-content">
                <div class="modal-header" id="popup-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h3 class="panel-title">
                        Sign up
                    </h3>
                </div>

                <div class="modal-body">
                    @*
                        <div class="Record">
                            <div class="ErrorContainer" id="successStatus" style="display: none">
                            </div>
                        </div>
                    *@
                    <div id="fb-root"></div>
                    <!--Fb Login Script-->
                    @*<script>
                            window.userFields = {
                                UserId: "@(Session["userid"] != null ? Session["userid"] : "")",
                                UserType: "@(Session["type"] != null ? Session["type"] : "")",
                                FirstName: "@(Session["firstname"] != null ? Session["firstname"] : "")",
                                LastName: "@(Session["lastname"] != null ? Session["lastname"] : "")",
                                Email: "@(Session["email"] != null ? Session["email"] : "")",
                                Mobile: "@(Session["mobile"] != null ? Session["mobile"] : "")",
                                DateOfBirth: "@(Session["dob"] != null ? Session["dob"] : "")",
                                Gender: "@(Session["gender"] != null ? Session["gender"] : "")",
                                City: "@(Session["city"] != null ? Session["city"] : "")",
                                Profile_Pic_Http: "@(Session["profile_pic"] != null ? Session["profile_pic"] : "")",
                                Profile_Pic_Https: "@(Session["profile_pic_https"] != null ? Session["profile_pic_https"] : "")",
                                Country: "@(Session["country"] != null ? Session["country"] : "")",
                                accessToken: "@(Session["fb_access_token"] != null ? Session["fb_access_token"] : "")"
                            };


                            window.fbAsyncInit = function () {
                                FB.init({
                                    appId: '@ConfigurationManager.AppSettings["FacebookAppId"]',
                                    status: true, // check login status
                                    cookie: true, // enable cookies to allow the server to access the session
                                    xfbml: true  // parse XFBML
                                });

                                // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
                                // for any authentication related change, such as login, logout or session refresh. This means that
                                // whenever someone who was previously logged out tries to log in again, the correct case below
                                // will be handled.
                                FB.Event.subscribe('auth.authResponseChange', function (response) {
                                    // Here we specify what we do with the response anytime this event occurs.
                                    if (response.status === 'connected') {
                                        // The response object is returned with a status field that lets the app know the current
                                        // login status of the person. In this case, we're handling the situation where they
                                        // have logged in to the app.
                                        //testAPI();
                                        var uid = response.authResponse.userID;
                                        var accessToken = response.authResponse.accessToken;
                                        //fbLogin();
                                        testAPI(response);
                                    } else if (response.status === 'not_authorized') {
                                        // In this case, the person is logged into Facebook, but not into the app, so we call
                                        // FB.login() to prompt them to do so.
                                        // In real-life usage, you wouldn't want to immediately prompt someone to login
                                        // like this, for two reasons:
                                        // (1) JavaScript created popup windows are blocked by most browsers unless they
                                        // result from direct interaction from people using the app (such as a mouse click)
                                        // (2) it is a bad experience to be continually prompted to login upon page load.
                                        //FB.login();
                                        //fbLogin();
                                        testAPI(response);
                                    } else {
                                        // In this case, the person is not logged into Facebook, so we call the login()
                                        // function to prompt them to do so. Note that at this stage there is no indication
                                        // of whether they are logged into the app. If they aren't then they'll see the Login
                                        // dialog right after they log in to Facebook.
                                        // The same caveats as above apply to the FB.login() call here.
                                        //FB.login();
                                        //fbLogin();
                                        testAPI(response);
                                    }
                                });
                            };

                            // Load the SDK asynchronously
                            (function (d) {
                                var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
                                if (d.getElementById(id)) { return; }
                                js = d.createElement('script'); js.id = id; js.async = true;
                                js.src = "//connect.facebook.net/en_US/all.js";
                                ref.parentNode.insertBefore(js, ref);
                            }(document));

                            // Here we run a very simple test of the Graph API after login is successful.
                            // This testAPI() function is only called in those cases.
                            function testAPI(response) {
                                console.log('Welcome!  Fetching your information.... ');

                                accessToken = "";
                                accessToken = response.authResponse.accessToken;

                                FB.api('/me', function (response) {
                                    console.log(response);
                                    console.log('Good to see you, ' + response.name + '.');

                                    userFields.UserId = response.id;
                                    userFields.UserType = "facebook";
                                    userFields.FirstName = response.first_name;
                                    userFields.LastName = response.last_name;
                                    userFields.Email = response.email;
                                    userFields.Mobile = "";
                                    userFields.DateOfBirth = response.birthday;
                                    userFields.Gender = response.gender;
                                    userFields.City = "";
                                    userFields.Profile_Pic_Http = "http://graph.facebook.com/" + response.id + "/picture?type=large";
                                    userFields.Profile_Pic_Https = "https://graph.facebook.com/" + response.id + "/picture?type=large";
                                    userFields.Country = accessToken; // since we do not want to make major changes, posting access token in country field
                                    connectUser();
                                });
                            }

                            var accessToken;
                            var fbLogin = function () {

                                FB.login(function (response) {

                                    if (response.authResponse) {
                                        //$('#cboxClose').trigger('click');
                                        accessToken = "";
                                        accessToken = response.authResponse.accessToken;

                                        $(window).colorbox.close();
                                        //console.log('Welcome!  Fetching your information.... ');
                                        if (response.status === 'connected') {
                                            loginStatus = true;

                                            FB.api('/me', function (response) {
                                                userFields.UserId = response.id;
                                                userFields.UserType = "facebook";
                                                userFields.FirstName = response.first_name;
                                                userFields.LastName = response.last_name;
                                                userFields.Email = response.email;
                                                userFields.Mobile = "";
                                                userFields.DateOfBirth = response.birthday;
                                                userFields.Gender = response.gender;
                                                userFields.City = "";
                                                userFields.Profile_Pic_Http = "http://graph.facebook.com/" + response.id + "/picture?type=large";
                                                userFields.Profile_Pic_Https = "https://graph.facebook.com/" + response.id + "/picture?type=large";
                                                userFields.Country = accessToken; // since we do not want to make major changes, posting access token in country field
                                                connectUser();
                                            });
                                        }
                                    } else {
                                        //console.log('User cancelled login or did not fully authorize.');
                                    }
                                }, { scope: 'email,user_about_me,user_birthday,user_website,publish_actions' });
                            }

                            window.connectUser = function () {
                                $.post("@Url.Action("ConnectUser", "Login")", userFields, function (response) {
                                    if (response.success == true) {
                                        if (/iPhone/i.test(navigator.userAgent)) {
                                            location.reload(true);
                                        }
                                    }
                                }, 'json');
                            }

                        </script>*@

                    <!--
                    Below we include the Login Button social plugin. This button uses the JavaScript SDK to
                    present a graphical Login button that triggers the FB.login() function when clicked. -->
                    <div class="Record">

                        @*<fb:login-button show-faces="false" size="large" max-rows="1" width="500">
                                Sign Up with Facebook
                            </fb:login-button>*@
                    </div>


                    <div class="Record">
                        <div class="Column2">
                            <div class="popup-or">
                                <span>
                                    &nbsp;&nbsp;&nbsp;
                                    Or&nbsp;&nbsp;&nbsp;
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="Record">
                        <div class="Column2">
                            <a data-toggle="modal" href="#SignUp-Input" role="presentation" data-dismiss="modal">Sign up with Email</a>

                        </div>
                    </div>

                </div>
                <div class="modal-footer" id="popup-footer">
                    Already an moviemirchi member?<a data-toggle="modal" href="#Login" role="presentation" data-dismiss="modal"> Log in</a>

                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>

    @*End Popup for signUp*@


    @*signup input popup*@
    <div class="modal fade" id="SignUp-Input" tabindex="-2" role="dialog" aria-labelledby="myModalLabel2" aria-haspopup="false">
        <div class="modal-dialog" id="popup">
            <div class="modal-content">
                <div class="modal-header" id="popup-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h3 class="panel-title">
                        Sign up
                    </h3>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm())
                    {
                        <div class="Record">
                            <div class="Column2">
                                <div class="alert alert-danger" id="registerError" style="display: none"></div>
                                <div class="alert alert-success" id="successStatusR" style="display: none"></div>
                            </div>
                        </div>
                        <div id="fb-root"></div>
                        <div class="Record">

                            <fb:login-button show-faces="false" size="large" max-rows="1" width="500">
                                Sign up with Facebook
                            </fb:login-button>
                        </div>

                        <div class="Record">
                            <div class="Column2">
                                <div class="popup-or">
                                    <span>
                                        &nbsp;&nbsp;&nbsp;
                                        Or&nbsp;&nbsp;&nbsp;
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <input type="text" id="firstName" placeholder="First Name" class="popup-input" />
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <input type="text" id="lastName" placeholder="Last Name" class="popup-input" />
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <input type="email" id="emailAddress" placeholder="Email Address" class="popup-input" />
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <input type="password" id="userPassword" placeholder="Password" class="popup-input" />
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <input type="password" id="confirmPassword" placeholder="Confirm Password" class="popup-input" />
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <label class="checkbox remember-me" for="remember_me2">
                                    <input id="remember_me2" class="remember_me" type="checkbox" value="true" name="remember_me" />
                                    Tell me about MovieMirchi
                                </label>
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">

                                <div class="btn btn-primary" id="popup-auth" onclick="RegisterUser();">Register</div>
                                @Html.Hidden("userJson", "")
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer" id="popup-footer">
                    Already an moviemirchi member?<a data-toggle="modal" href="#Login" role="presentation" data-dismiss="modal"> Log in</a>
                </div>
            </div>
            @*end signup input popup*@
        </div>


</body>
</html>

@*<script type="text/javascript" src="/Content/jquery.mousewheel.js"></script>
    <script type="text/javascript" src="/Content/jquery.jscrollpane.min.js"></script>
    <script type="text/javascript" src="/Content/jquerypp.custom.js"></script>*@
@*<script type="text/javascript" src="/Content/jquery.bookblock.js"></script>*@
<script type="text/javascript" src="/Content/page.js"></script>
<script type="text/javascript" src="/Content/movie.core.js"></script>
<script type="text/javascript" src="/Content/movie.autocomplete.js"></script>
<script type="text/javascript" src="/Content/controls/mm.tube.js"></script>
<script type="text/javascript" src="/Content/controls/mm.pager.js"></script>
<script type="text/javascript" src="/Content/controls/mm.tile.js"></script>
<script type="text/javascript" src="/Content/controls/mm.news.js"></script>
<script type="text/javascript" src="/Content/controls/mm.rate.js"></script>
<script type="text/javascript" src="/Content/controls/mm.gallery.js"></script>
<script type="text/javascript" src="/Content/controls/mm.critics.js"></script>
<script type="text/javascript" src="/Content/controls/mm.twitter.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        LoadTweets();
        LoadNews();
    });
</script>