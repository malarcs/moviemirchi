@using System.Configuration;
@using DataStoreLib.Storage;

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Movie Mirchi</title>
    <meta name="robots" content="NOODP" />
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    @Styles.Render("~/Content/bootstrap.min.css")
    @Styles.Render("~/Content/custom.css")
    @Styles.Render("~/Content/styles/mm.header.css")
    @Styles.Render("~/Content/styles/mm.footer.css")
    @Styles.Render("~/Content/styles/mm.common.css")
    @Styles.Render("~/Content/styles/mm.pager.css")
    @Styles.Render("~/Content/styles/mm.critics.css")
    @Styles.Render("~/Content/styles/mm.news.css")
    @Styles.Render("~/Content/styles/mm.review.css")
    @Styles.Render("~/Content/styles/mm.reviewer.css")
    @Styles.Render("~/Content/styles/mm.twitter.css")
    @Styles.Render("~/Content/styles/mm.moviedetails.css")
    @Styles.Render("~/Content/styles/mm.rate.css")
    @Styles.Render("~/Content/styles/mm.tags.css")
    @Styles.Render("~/Content/styles/top-nav.css")
    @Styles.Render("~/Content/styles/mm.login.css")
    @Styles.Render("~/Content/styles/mm.user.pref.css")
    @Scripts.Render("~/Content/jquery-1.9.1.js")
    @Scripts.Render("~/Content/bootstrap.min.js")
    @Styles.Render("~/Content/prettyPhoto.css")
    @Scripts.Render("~/Content/jquery.prettyPhoto.js")
    <link rel="icon" type="image/png" href="images/favicon.png">
    <style>
        .gallery li {
            list-style: none;
        }

        .active {
            color: #696464;
            background-color: #BDB58B;
        }
    </style>

    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-52983576-1', 'auto');
        ga('require', 'displayfeatures');
        ga('send', 'pageview');

    </script>
    <script>
        var USER_ID = "";
        var trackNewsLink = function (url) {
            ga('send', 'event', 'news', 'click', url, {
                'hitCallback':
                  function () {
                      //document.location = url;
                  }
            });
        }

        var trackReviewLink = function (url) {
            ga('send', 'event', 'review', 'click', url, {
                'hitCallback':
                  function () {
                      //document.location = url;
                  }
            });
        }

        var trackVideoLink = function (url) {
            ga('send', 'event', 'video', 'click', url, {
                'hitCallback':
                  function () {
                      //document.location = url;
                  }
            });
        }

        var trackSongLink = function (url) {
            ga('send', 'event', 'song', 'click', url, {
                'hitCallback':
                  function () {
                      //document.location = url;
                  }
            });
        }

        var trackSearchLink = function (pageName, searchTerm) {
            ga('send', 'event', 'search', 'click', pageName + "-" + searchTerm, {
                'hitCallback':
                  function () {
                      //document.location = url;
                  }
            });
        }

        var trackPhotoLink = function (url) {
            ga('send', 'event', 'photo', 'click', url, {
                'hitCallback':
                  function () {
                      //document.location = url;
                  }
            });
        }
    </script>
</head>
<body>
    <div class="movie-container">
        <div class="header">
            <div class="logo">
                <a href="/" title="Movie Mirchi"><img src='/Images/logo.png' /></a>
            </div>
            <div class="small-logo">
                <a href="/" title="Movie Mirchi"><img src='/Images/RedChilli.png' /></a>
            </div>
            <div class="home-search-bar">
                <input type="text" class="form-control search" placeholder="What do you like? Movies, Celebrities, Reviewers ..." id="home-search" name="query" value="" autocomplete="off" />
                <span class="clear-search-bar" title="Clear search"><img src="/Images/clear-button.png" class="clear-search-bar-button"></span>

                <div class="search-button">Search</div>
                <div id="search-results"></div>
            </div>
            <div class="nav-options"></div>
            <div class="user-status">
                <ul>
                    @if (Session["username"] != null)
                    {
                        <li class="authenticate">
                            Welcome, @Session["username"].ToString().ToUpper()
                        </li>
                        <li class="log">
                            @Html.ActionLink("Logout", "Logout", "Login")

                        </li>
                        <li class="userid" style="display: none" userid="@Session["userid"].ToString()"></li>
                    }
                    else
                    {
                        <li><a data-toggle="modal" href="#SignUp" role="presentation">Sign Up</a></li>
                        <li><a data-toggle="modal" href="#Login" role="presentation">Sign In</a></li>
                    }
                    
                </ul>
            </div>
        </div>
    </div>

    <div id="container" class="movie-panel">
        <div class="nav-bar-container"></div>
        @RenderBody()
    </div>
    <div class="footer">

        <ul>
            <li><a href="/">Home</a></li>
            <li><a href="/home/about">About</a></li>
            <li>Privacy Policy</li>
            <li>Terms & Condition</li>
            @*<li id="login"><a href="javascript:void(0);" onclick="$('#Login').modal('show');">Login</a></li>
                <li id="logout" style="display: none"><a href="/login/logout">Logout</a></li>*@
        </ul>
        <input type="hidden" id="hfUserId" /><div>&copy;&nbsp;2014 Movie Mirchi</div>
    </div>
    @*Added popup for Login*@
    <div class="modal fade" id="Login" tabindex="-2" role="dialog" aria-labelledby="myModalLabel2" aria-haspopup="false">
        <div class="modal-dialog" id="popup">
            <div class="modal-content">
                <div class="modal-header" id="popup-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h3 class="panel-title">
                        Log in
                    </h3>
                </div>

                <div class="modal-body">
                    @using (Html.BeginForm())
                    {
                        <div class="Record">
                            <div class="Column2">


                                <div class="alert alert-danger" id="loginError" style="display: none"></div>

                            </div>
                        </div>

                        <div id="fb-root"></div>
                        <!--Fb Login Srcipt-->
                        <script>
                            window.userFields = {
                                UserId: "@(Session["userid"] != null ? Session["userid"] : "")",
                                UserType: "@(Session["type"] != null ? Session["type"] : "")",
                                FirstName: "@(Session["firstname"] != null ? Session["firstname"] : "")",
                                LastName: "@(Session["lastname"] != null ? Session["lastname"] : "")",
                                Email: "@(Session["email"] != null ? Session["email"] : "")",
                                Mobile: "@(Session["mobile"] != null ? Session["mobile"] : "")",
                                DateOfBirth: "@(Session["dob"] != null ? Session["dob"] : "")",
                                Gender: "@(Session["gender"] != null ? Session["gender"] : "")",
                                City: "@(Session["city"] != null ? Session["city"] : "")",
                                Profile_Pic_Http: "@(Session["profile_pic"] != null ? Session["profile_pic"] : "")",
                                Profile_Pic_Https: "@(Session["profile_pic_https"] != null ? Session["profile_pic_https"] : "")",
                                Country: "@(Session["country"] != null ? Session["country"] : "")",
                                accessToken: "@(Session["fb_access_token"] != null ? Session["fb_access_token"] : "")"
                            };


                            window.fbAsyncInit = function () {
                                FB.init({
                                    appId: '@ConfigurationManager.AppSettings["FacebookAppId"]',
                                    status: true, // check login status
                                    cookie: true, // enable cookies to allow the server to access the session
                                    xfbml: true  // parse XFBML
                                });

                                // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
                                // for any authentication related change, such as login, logout or session refresh. This means that
                                // whenever someone who was previously logged out tries to log in again, the correct case below
                                // will be handled.
                                FB.Event.subscribe('auth.authResponseChange', function (response) {
                                    // Here we specify what we do with the response anytime this event occurs.
                                    if (response.status === 'connected') {
                                        // The response object is returned with a status field that lets the app know the current
                                        // login status of the person. In this case, we're handling the situation where they
                                        // have logged in to the app.
                                        //testAPI();
                                        var uid = response.authResponse.userID;
                                        var accessToken = response.authResponse.accessToken;
                                        //fbLogin();
                                        testAPI(response);
                                    } else if (response.status === 'not_authorized') {
                                        // In this case, the person is logged into Facebook, but not into the app, so we call
                                        // FB.login() to prompt them to do so.
                                        // In real-life usage, you wouldn't want to immediately prompt someone to login
                                        // like this, for two reasons:
                                        // (1) JavaScript created popup windows are blocked by most browsers unless they
                                        // result from direct interaction from people using the app (such as a mouse click)
                                        // (2) it is a bad experience to be continually prompted to login upon page load.
                                        //FB.login();
                                        //fbLogin();

                                        testAPI(response);
                                    } else {
                                        // In this case, the person is not logged into Facebook, so we call the login()
                                        // function to prompt them to do so. Note that at this stage there is no indication
                                        // of whether they are logged into the app. If they aren't then they'll see the Login
                                        // dialog right after they log in to Facebook.
                                        // The same caveats as above apply to the FB.login() call here.
                                        //FB.login();
                                        //fbLogin();

                                        testAPI(response);
                                    }
                                });
                            };

                            // Load the SDK asynchronously
                            (function (d) {
                                var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
                                if (d.getElementById(id)) { return; }
                                js = d.createElement('script'); js.id = id; js.async = true;
                                js.src = "//connect.facebook.net/en_US/all.js";
                                ref.parentNode.insertBefore(js, ref);
                            }(document));

                            // Here we run a very simple test of the Graph API after login is successful.
                            // This testAPI() function is only called in those cases.
                            function testAPI(response) {
                                if (userFields.UserId == "")
                                    return;

                                accessToken = "";
                                accessToken = response.authResponse.accessToken;

                                FB.api('/me', function (response) {
                                    userFields.UserId = response.id;
                                    userFields.UserType = "facebook";
                                    userFields.FirstName = response.first_name;
                                    userFields.LastName = response.last_name;
                                    userFields.Email = response.email;
                                    userFields.Mobile = "";
                                    userFields.DateOfBirth = response.birthday;
                                    userFields.Gender = response.gender;
                                    userFields.City = "";
                                    userFields.Profile_Pic_Http = "http://graph.facebook.com/" + response.id + "/picture?type=large";
                                    userFields.Profile_Pic_Https = "https://graph.facebook.com/" + response.id + "/picture?type=large";
                                    userFields.Country = accessToken; // since we do not want to make major changes, posting access token in country field
                                    connectUser();
                                });
                            }

                            var accessToken;

                            var fbLogin = function () {

                                FB.login(function (response) {

                                    if (response.authResponse) {
                                        //$('#cboxClose').trigger('click');
                                        accessToken = "";
                                        accessToken = response.authResponse.accessToken;

                                        $(window).colorbox.close();
                                        //console.log('Welcome!  Fetching your information.... ');
                                        if (response.status === 'connected') {
                                            loginStatus = true;
                                            USER_ID = response.id;
                                            $("#hfUserId").attr("value", USER_ID);
                                            FB.api('/me', function (response) {
                                                userFields.UserId = response.id;
                                                userFields.UserType = "facebook";
                                                userFields.FirstName = response.first_name;
                                                userFields.LastName = response.last_name;
                                                userFields.Email = response.email;
                                                userFields.Mobile = "";
                                                userFields.DateOfBirth = response.birthday;
                                                userFields.Gender = response.gender;
                                                userFields.City = "";
                                                userFields.Profile_Pic_Http = "http://graph.facebook.com/" + response.id + "/picture?type=large";
                                                userFields.Profile_Pic_Https = "https://graph.facebook.com/" + response.id + "/picture?type=large";
                                                userFields.Country = accessToken; // since we do not want to make major changes, posting access token in country field
                                                connectUser();
                                            });
                                        }
                                    } else {
                                        //console.log('User cancelled login or did not fully authorize.');
                                    }
                                }, { scope: 'email,user_about_me,user_birthday,user_website,publish_actions' });
                            }

                            window.connectUser = function () {
                                $.post("@Url.Action("ConnectUser", "Login")", userFields, function (response) {

                                    if (response.success == true) {
                                        $('#login').hide();
                                        $('#logout').show();
                                        if (/iPhone/i.test(navigator.userAgent)) {
                                            location.reload(true);
                                        }
                                    }
                                }, 'json');
                            }

                        </script>

                        <!--
                        Below we include the Login Button social plugin. This button uses the JavaScript SDK to
                        present a graphical Login button that triggers the FB.login() function when clicked. -->

                        <div class="Record">

                            <fb:login-button show-faces="false" size="large" max-rows="1" width="500">
                                Login with Facebook
                            </fb:login-button>
                        </div>

                        <div class="Record">
                            <div class="popup-or">
                                Or
                            </div>
                        </div>

                        <div class="Record">
                            <div class="Column2">
                                <input type="text" id="username" placeholder="Email Address" class="popup-input" />
                            </div>
                        </div>

                        <div class="Record">
                            <div class="Column2">
                                <input type="password" id="loginPassword" placeholder="Password" class="popup-input" />


                            </div>
                        </div>
                        <div class="Record" style="text-align: left; margin-left: 15px;">
                            <div class="Column2">

                                <input id="remember_me2" class="remember_me" type="checkbox" value="true" name="remember_me" />
                                <span>Remember me</span>
                                <span style="float: right; margin-top: 5px; margin-right: 30px; display: none;">
                                    <a href="#" class="forgot_password">Forgot Password</a>
                                </span>
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">

                                <div id="popup-auth" class="btn btn-primary" onclick="authenticateUser();">Login</div>
                                @Html.Hidden("hfLogin", "")

                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer" id="popup-footer">
                    Don't have an account? <a data-toggle="modal" href="#SignUp" role="presentation" data-dismiss="modal">Sign Up</a>

                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    @*End popup for login*@

    @*Popup for signUp*@
    <div class="modal fade" id="SignUp" tabindex="-2" role="dialog" aria-labelledby="myModalLabel2" aria-haspopup="false">
        <div class="modal-dialog" id="popup">
            <div class="modal-content">
                <div class="modal-header" id="popup-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h3 class="panel-title">
                        Sign up
                    </h3>
                </div>

                <div class="modal-body">

                    <div class="Record">
                        <div class="ErrorContainer" id="successStatus" style="display: none">
                        </div>
                    </div>

                    <div id="fb-root"></div>
                    <!--Fb Login Script-->
                    <script>
                        window.userFields = {
                            UserId: "@(Session["userid"] != null ? Session["userid"] : "")",
                            UserType: "@(Session["type"] != null ? Session["type"] : "")",
                            FirstName: "@(Session["firstname"] != null ? Session["firstname"] : "")",
                            LastName: "@(Session["lastname"] != null ? Session["lastname"] : "")",
                            Email: "@(Session["email"] != null ? Session["email"] : "")",
                            Mobile: "@(Session["mobile"] != null ? Session["mobile"] : "")",
                            DateOfBirth: "@(Session["dob"] != null ? Session["dob"] : "")",
                            Gender: "@(Session["gender"] != null ? Session["gender"] : "")",
                            City: "@(Session["city"] != null ? Session["city"] : "")",
                            Profile_Pic_Http: "@(Session["profile_pic"] != null ? Session["profile_pic"] : "")",
                            Profile_Pic_Https: "@(Session["profile_pic_https"] != null ? Session["profile_pic_https"] : "")",
                            Country: "@(Session["country"] != null ? Session["country"] : "")",
                            accessToken: "@(Session["fb_access_token"] != null ? Session["fb_access_token"] : "")"
                        };


                        window.fbAsyncInit = function () {
                            FB.init({
                                appId: '@ConfigurationManager.AppSettings["FacebookAppId"]',
                                status: true, // check login status
                                cookie: true, // enable cookies to allow the server to access the session
                                xfbml: true  // parse XFBML
                            });

                            // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
                            // for any authentication related change, such as login, logout or session refresh. This means that
                            // whenever someone who was previously logged out tries to log in again, the correct case below
                            // will be handled.
                            FB.Event.subscribe('auth.authResponseChange', function (response) {
                                // Here we specify what we do with the response anytime this event occurs.
                                if (response.status === 'connected') {
                                    // The response object is returned with a status field that lets the app know the current
                                    // login status of the person. In this case, we're handling the situation where they
                                    // have logged in to the app.
                                    //testAPI();
                                    var uid = response.authResponse.userID;
                                    var accessToken = response.authResponse.accessToken;
                                    //fbLogin();
                                    testAPI(response);
                                } else if (response.status === 'not_authorized') {
                                    // In this case, the person is logged into Facebook, but not into the app, so we call
                                    // FB.login() to prompt them to do so.
                                    // In real-life usage, you wouldn't want to immediately prompt someone to login
                                    // like this, for two reasons:
                                    // (1) JavaScript created popup windows are blocked by most browsers unless they
                                    // result from direct interaction from people using the app (such as a mouse click)
                                    // (2) it is a bad experience to be continually prompted to login upon page load.
                                    //FB.login();
                                    //fbLogin();
                                    testAPI(response);
                                } else {
                                    // In this case, the person is not logged into Facebook, so we call the login()
                                    // function to prompt them to do so. Note that at this stage there is no indication
                                    // of whether they are logged into the app. If they aren't then they'll see the Login
                                    // dialog right after they log in to Facebook.
                                    // The same caveats as above apply to the FB.login() call here.
                                    //FB.login();
                                    //fbLogin();
                                    testAPI(response);
                                }
                            });
                        };

                        // Load the SDK asynchronously
                        (function (d) {
                            var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
                            if (d.getElementById(id)) { return; }
                            js = d.createElement('script'); js.id = id; js.async = true;
                            js.src = "//connect.facebook.net/en_US/all.js";
                            ref.parentNode.insertBefore(js, ref);
                        }(document));

                        // Here we run a very simple test of the Graph API after login is successful.
                        // This testAPI() function is only called in those cases.
                        function testAPI(response) {
                            //console.log('Welcome!  Fetching your information.... ');

                            accessToken = "";
                            accessToken = response.authResponse.accessToken;

                            FB.api('/me', function (response) {
                                //console.log(response);
                                //console.log('Good to see you, ' + response.name + '.');

                                userFields.UserId = response.id;
                                userFields.UserType = "facebook";
                                userFields.FirstName = response.first_name;
                                userFields.LastName = response.last_name;
                                userFields.Email = response.email;
                                userFields.Mobile = "";
                                userFields.DateOfBirth = response.birthday;
                                userFields.Gender = response.gender;
                                userFields.City = "";
                                userFields.Profile_Pic_Http = "http://graph.facebook.com/" + response.id + "/picture?type=large";
                                userFields.Profile_Pic_Https = "https://graph.facebook.com/" + response.id + "/picture?type=large";
                                userFields.Country = accessToken; // since we do not want to make major changes, posting access token in country field
                                connectUser();
                            });
                        }

                        var accessToken;
                        var fbLogin = function () {

                            FB.login(function (response) {

                                if (response.authResponse) {
                                    //$('#cboxClose').trigger('click');
                                    accessToken = "";
                                    accessToken = response.authResponse.accessToken;

                                    $(window).colorbox.close();
                                    //console.log('Welcome!  Fetching your information.... ');
                                    if (response.status === 'connected') {
                                        loginStatus = true;
                                        USER_ID = response.id;
                                        $("#hfUserId").attr("value", USER_ID);

                                        FB.api('/me', function (response) {
                                            userFields.UserId = response.id;
                                            userFields.UserType = "facebook";
                                            userFields.FirstName = response.first_name;
                                            userFields.LastName = response.last_name;
                                            userFields.Email = response.email;
                                            userFields.Mobile = "";
                                            userFields.DateOfBirth = response.birthday;
                                            userFields.Gender = response.gender;
                                            userFields.City = "";
                                            userFields.Profile_Pic_Http = "http://graph.facebook.com/" + response.id + "/picture?type=large";
                                            userFields.Profile_Pic_Https = "https://graph.facebook.com/" + response.id + "/picture?type=large";
                                            userFields.Country = accessToken; // since we do not want to make major changes, posting access token in country field
                                            connectUser();
                                        });
                                    }
                                } else {
                                    //console.log('User cancelled login or did not fully authorize.');
                                }
                            }, { scope: 'email,user_about_me,user_birthday,user_website,publish_actions' });
                        }

                        window.connectUser = function () {
                            $.post("@Url.Action("ConnectUser", "Login")", userFields, function (response) {
                                if (response.success == true) {
                                    $('#login').hide();
                                    $('#logout').show();
                                    if (/iPhone/i.test(navigator.userAgent)) {
                                        location.reload(true);
                                    }
                                }
                            }, 'json');
                        }

                        if (userFields.UserId != "" && userFields.UserId != null) {
                            $.post("@Url.Action("ConnectUser", "Login")", userFields, function (response) {
                                if (response.success == true) {
                                    $('#login').hide();
                                    $('#logout').show();
                                    if (/iPhone/i.test(navigator.userAgent)) {
                                        location.reload(true);
                                    }
                                }
                            }, 'json');
                        }

                    </script>

                    <!--
                    Below we include the Login Button social plugin. This button uses the JavaScript SDK to
                    present a graphical Login button that triggers the FB.login() function when clicked. -->
                    <div class="Record">

                        <fb:login-button show-faces="false" size="large" max-rows="1" width="500">
                            Sign Up with Facebook
                        </fb:login-button>
                    </div>


                    <div class="Record">
                        <div class="popup-or">
                            Or
                        </div>
                    </div>
                    <div class="Record">
                        <div class="Column2">
                            <a data-toggle="modal" href="#SignUp-Input" role="presentation" data-dismiss="modal">Sign up with Email</a>

                        </div>
                    </div>

                </div>
                <div class="modal-footer" id="popup-footer">
                    Already Movie Mirchi member? <a data-toggle="modal" href="#Login" role="presentation" data-dismiss="modal">Log in</a>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>
    @*End Popup for signUp*@

    @*signup input popup*@
    <div class="modal fade" id="SignUp-Input" tabindex="-2" role="dialog" aria-labelledby="myModalLabel2" aria-haspopup="false">
        <div class="modal-dialog" id="popup">
            <div class="modal-content">
                <div class="modal-header" id="popup-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h3 class="panel-title">
                        Sign up
                    </h3>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm())
                    {
                        <div class="Record">
                            <div class="Column2">
                                <div class="alert alert-danger" id="registerError" style="display: none"></div>
                                <div class="alert alert-success" id="successStatusR" style="display: none"></div>
                            </div>
                        </div>
                        <div id="fb-root"></div>
                        <div class="Record">

                            <fb:login-button show-faces="false" size="large" max-rows="1" width="500">
                                Sign up with Facebook
                            </fb:login-button>
                        </div>

                        <div class="Record">
                            <div class="popup-or">
                                Or
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <input type="text" id="firstName" placeholder="First Name" class="popup-input" />
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <input type="text" id="lastName" placeholder="Last Name" class="popup-input" />
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <input type="text" id="emailAddress" placeholder="Email Address" class="popup-input" />
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <input type="password" id="userPassword" placeholder="Password" class="popup-input" />
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">
                                <input type="password" id="confirmPassword" placeholder="Confirm Password" class="popup-input" />
                            </div>
                        </div>
                        <div class="Record" style="text-align: left; margin-left: 15px;">
                            <div class="Column2">

                                <input id="remember_me2" class="remember_me" type="checkbox" value="true" name="remember_me" />
                                <span>
                                    Tell me about Movie Mirchi
                                </span>
                                @*<label class="checkbox remember-me" for="remember_me2">
                                        <input id="remember_me2" class="remember_me" type="checkbox" value="true" name="remember_me" />
                                        Tell me about Movie Mirchi
                                    </label>*@
                            </div>
                        </div>
                        <div class="Record">
                            <div class="Column2">

                                <div class="btn btn-primary" id="popup-auth" onclick="RegisterUser();">Register</div>
                                @Html.Hidden("userJson", "")
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer" id="popup-footer">
                    Already Movie Mirchi member? <a data-toggle="modal" href="#Login" role="presentation" data-dismiss="modal">Log in</a>
                </div>
            </div>
            @*end signup input popup*@
        </div>
    </div>
</body>
</html>
<script type="text/javascript" src="/Content/movie.core.js"></script>
<script type="text/javascript" src="/Content/controls/mm.tube.js"></script>
<script type="text/javascript" src="/Content/controls/mm.pager.js"></script>
<script type="text/javascript" src="/Content/controls/mm.mobile.pager.js"></script>
<script type="text/javascript" src="/Content/controls/mm.tile.js"></script>
<script type="text/javascript" src="/Content/controls/mm.news.js"></script>
<script type="text/javascript" src="/Content/controls/mm.rate.js"></script>
<script type="text/javascript" src="/Content/controls/mm.gallery.js"></script>
<script type="text/javascript" src="/Content/controls/mm.critics.js"></script>
<script type="text/javascript" src="/Content/controls/mm.twitter.js"></script>
<script type="text/javascript" src="/Content/controls/mm.util.js"></script>
<script type="text/javascript" src="/Content/controls/mm.search.js"></script>
<script type="text/javascript" src="/Content/controls/mm.tags.js"></script>
<script type="text/javascript" src="/Content/controls/mm.nav.js"></script>
<script type="text/javascript" src="/Content/controls/mm.login.js"></script>
<script type="text/javascript" src="/Content/controls/mm.preferences.js"></script>
<script type="text/javascript" src="/Content/controls/mm.favorite.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        LoadNews();
        //ArrangeTopNavLinks();
        // This needs to be displayed only after news and tweets on page are loaded. However currently, we don't have flags which track the progress.
        // Hence directly showing the footer after interval.
        //setTimeout(function () { $(".footer").css("display", "block"); }, 3000);
        //var height = $(document).height();
        //$(".movie-panel").css("min-height", (height - 150) + "px");

        $(".nav-options").click(function (e) {
            if ($(".nav-bar-container").css("display") == "block") {
                $(".nav-bar-container").css("display", "none");
            }
            else {
                $(".nav-bar-container").css("display", "block");
                //$(".nav-bar-container ul li").css("display", "block");
            }

            e.stopPropagation();
        });

        $(".nav-options").bind('touchstart', function (event) {
            if ($(".nav-bar-container").css("display") == "block") {
                $(".nav-bar-container").css("display", "none");
            }
            else {
                $(".nav-bar-container").css("display", "block");
                //$(".nav-bar-container ul li").css("display", "block");
            }

            event.preventDefault();
        });

        $(".nav-options").hover(function (e) {
            $(".nav-bar-container").css("display", "block");
            //$(".nav-bar-container ul li").css("display", "block");

            e.stopPropagation();
        });

        // Having issue while hiding the top nav bar on mouse out 
        // hence commented the following code
        /*$(".nav-bar-container ul").mouseout(function () {
            $(".nav-bar-container").css("display", "none");
        });*/

        $(window).resize(function () {
            ArrangeTopNavLinks();
            $(".movie-list ul").each(function () {
                ScaleElement($(this));
            });
        });

        /*if ($(window).width() > 767) {
            var btn = new UserPreferences();
            $('body').append(btn);
        }*/
    });

    function ArrangeTopNavLinks() {
        if ($(window).width() > 700) {
            var width = $(document).width() - 100;
            var listCounter = 0;
            var possibleLinks = Math.floor(width / 200);
            //$(".nav-bar-container").css("display", "block");
            $("ul.top-nav-bar").find("li").each(function () {
                if (listCounter > possibleLinks) {
                    $(this).hide();
                }
                else {
                    //$(this).show();
                }

                listCounter++;
            });
        }
        else {
            //$("ul.top-nav-bar li").hide();
            /*if ($(".nav-bar-container").css("display") == "block") {
                $("ul.top-nav-bar li").show();
            }*/
        }
    }

    function toPascalCase(str) {
        var arr = str.split(/\s|_/);
        for (var i = 0, l = arr.length; i < l; i++) {
            arr[i] = arr[i].substr(0, 1).toUpperCase() +
                     (arr[i].length > 1 ? arr[i].substr(1).toLowerCase() : "");
        }
        return arr.join(" ");
    }

</script>